Loops

1.for loop
(for [i [1 2 3]]
  i)
=> (1 2 3)
(for [i [1 2 3]]
  (inc i))
=> (2 3 4)
(range 3)
=> (0 1 2)
(range 1 4)
=> (1 2 3)

For loop with range
(for [i (range 1 4)]
  (inc i))
=> (2 3 4)
(for [i (range 1 4)
      j (range 4 1 -1)]
  [i j])
=> ([1 4] [1 3] [1 2] [2 4] [2 3] [2 2] [3 4] [3 3] [3 2])

For loop with let
(for [i (range 10)]
  (let [a (* i i)]
    (/ a 2)))
=> (0 1/2 2 9/2 8 25/2 18 49/2 32 81/2)
(for [i (range 10)
      :let [a (* i i)]]
  (/ a 2))
=> (0 1/2 2 9/2 8 25/2 18 49/2 32 81/2)

For with when condition
(for [i (range 10)]
  i)
=> (0 1 2 3 4 5 6 7 8 9)
(for [i (range 10)
      :when (even? i)]
  i)
=> (0 2 4 6 8)

For with while condition
(for [i (range 10)
      :while (even? i)]
  i)
=> (0)

Doseq
(doseq [ i (range 10)]
  (println " i is " i))
 i is  0
 i is  1
 i is  2
 i is  3
 i is  4
 i is  5
 i is  6
 i is  7
 i is  8
 i is  9
=> nil
(dotimes [i 10]
  (println " i is " i))
 i is  0
 i is  1
 i is  2
 i is  3
 i is  4
 i is  5
 i is  6
 i is  7
 i is  8
 i is  9
=> nil
